<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fruitsalesplatform.mapper.GenRetailerMapper">
  <resultMap id="BaseResultMap" type="com.fruitsalesplatform.entity.Retailer">
    <id column="retailerid" jdbcType="VARCHAR" property="retailerid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="telphone" jdbcType="VARCHAR" property="telphone" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="segment1" jdbcType="VARCHAR" property="segment1" />
    <result column="segment2" jdbcType="VARCHAR" property="segment2" />
    <result column="segment3" jdbcType="VARCHAR" property="segment3" />
    <result column="segment4" jdbcType="VARCHAR" property="segment4" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    retailerid, name, telphone, address, status, createtime, segment1, segment2, segment3, 
    segment4
  </sql>
  <select id="selectByExample" parameterType="com.fruitsalesplatform.example.RetailerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from retailer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from retailer
    where retailerid = #{retailerid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from retailer
    where retailerid = #{retailerid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.fruitsalesplatform.example.RetailerExample">
    delete from retailer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.fruitsalesplatform.entity.Retailer">
    insert into retailer (retailerid, name, telphone, 
      address, status, createtime, 
      segment1, segment2, segment3, 
      segment4)
    values (#{retailerid,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{telphone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}, 
      #{segment1,jdbcType=VARCHAR}, #{segment2,jdbcType=VARCHAR}, #{segment3,jdbcType=VARCHAR}, 
      #{segment4,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.fruitsalesplatform.entity.Retailer">
    insert into retailer
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="retailerid != null">
        retailerid,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="telphone != null">
        telphone,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="segment1 != null">
        segment1,
      </if>
      <if test="segment2 != null">
        segment2,
      </if>
      <if test="segment3 != null">
        segment3,
      </if>
      <if test="segment4 != null">
        segment4,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="retailerid != null">
        #{retailerid,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="telphone != null">
        #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="segment1 != null">
        #{segment1,jdbcType=VARCHAR},
      </if>
      <if test="segment2 != null">
        #{segment2,jdbcType=VARCHAR},
      </if>
      <if test="segment3 != null">
        #{segment3,jdbcType=VARCHAR},
      </if>
      <if test="segment4 != null">
        #{segment4,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.fruitsalesplatform.example.RetailerExample" resultType="java.lang.Long">
    select count(*) from retailer
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update retailer
    <set>
      <if test="record.retailerid != null">
        retailerid = #{record.retailerid,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.telphone != null">
        telphone = #{record.telphone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.segment1 != null">
        segment1 = #{record.segment1,jdbcType=VARCHAR},
      </if>
      <if test="record.segment2 != null">
        segment2 = #{record.segment2,jdbcType=VARCHAR},
      </if>
      <if test="record.segment3 != null">
        segment3 = #{record.segment3,jdbcType=VARCHAR},
      </if>
      <if test="record.segment4 != null">
        segment4 = #{record.segment4,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update retailer
    set retailerid = #{record.retailerid,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      telphone = #{record.telphone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      segment1 = #{record.segment1,jdbcType=VARCHAR},
      segment2 = #{record.segment2,jdbcType=VARCHAR},
      segment3 = #{record.segment3,jdbcType=VARCHAR},
      segment4 = #{record.segment4,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.fruitsalesplatform.entity.Retailer">
    update retailer
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="telphone != null">
        telphone = #{telphone,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="segment1 != null">
        segment1 = #{segment1,jdbcType=VARCHAR},
      </if>
      <if test="segment2 != null">
        segment2 = #{segment2,jdbcType=VARCHAR},
      </if>
      <if test="segment3 != null">
        segment3 = #{segment3,jdbcType=VARCHAR},
      </if>
      <if test="segment4 != null">
        segment4 = #{segment4,jdbcType=VARCHAR},
      </if>
    </set>
    where retailerid = #{retailerid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.fruitsalesplatform.entity.Retailer">
    update retailer
    set name = #{name,jdbcType=VARCHAR},
      telphone = #{telphone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      segment1 = #{segment1,jdbcType=VARCHAR},
      segment2 = #{segment2,jdbcType=VARCHAR},
      segment3 = #{segment3,jdbcType=VARCHAR},
      segment4 = #{segment4,jdbcType=VARCHAR}
    where retailerid = #{retailerid,jdbcType=VARCHAR}
  </update>
</mapper>