<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fruitsalesplatform.mapper.UserMapper">
    <resultMap id="UserResultMap" type="user">
        <id column="userid" property="mUserid" />
        <result column="username" property="mUserName" />
        <result column="password" property="mPassword" />
        <result column="name" property="mName" />
        <result column="telphone" property="mTelephone" />
    </resultMap>

    <select id="get" parameterType="java.lang.String" resultMap="UserResultMap">
        select * from user where userid=#{userid}
    </select>

    <select id="find" parameterType="map" resultMap="UserResultMap">
        select * from user
        where 1=1
        <if test="username != null">
            and username=#{username}
        </if>

        <if test="password != null">
            and password=#{password}
        </if>

        <if test="name != null">
            <bind name="name" value="'%' + name + '%'"/>
            and name like #{name}
        </if>

        <if test="telephone != null">
            and telephone = #{telephone}
        </if>
    </select>

    <!--插入语句-->
    <insert id="insert" parameterType="user">
        <selectKey keyProperty="mUserid" order="AFTER" resultType="int">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into user(username,password,name, telphone)
        values(#{mUserName}, #{mPassword}, #{mName}, #{mTelephone})
    </insert>

    <!--更新语句-->
    <update id="update" parameterType="user">
        update user
        <set>
            <if test="mPassword != null">
                password = #{mPassword},
            </if>

            <if test="mName != null">
                name = #{mName},
            </if>

            <if test="mTelephone != null">
                telephone = #{mTelephone}
            </if>
        </set>
        where userid = #{mUserid}
    </update>

    <!--删除一条-->
    <delete id="delete" parameterType="string">
        delete from user where userid = #{userid}
    </delete>

    <!--删除多条(一维字符串数组的形式)-->
    <delete id="deleteById" parameterType="string">
        delete from user
        where userid in
        <foreach collection="array" item="userId" open="(" close=")" separator=",">
            #{userId}
        </foreach>
    </delete>
</mapper>